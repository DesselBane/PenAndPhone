@startuml

interface Entity {
  tags: String[]
  info: String
  id: UUID
  name: String
}

interface Being extends Entity {
  traits: Trait[]
  inventory: Item[]
}

interface Trait extends Entity {
  fragments: TraitFragment
}

interface TraitFragment extends Entity {
  type: TraitFragmentTypes
}

enum TraitFragmentTypes {
  Text
  Number
  Selection
}

interface TraitFragmentText extends TraitFragment {
  type = TraitFragmentTypes.Text
  value: String
}

interface Item extends Entity {}

@enduml



@startuml

abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList

class ArrayList {
Object[] elementData
size()
}

enum TimeUnit {
DAYS
HOURS
MINUTES
}

@enduml
